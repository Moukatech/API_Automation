{"name": "test_get_all_users", "status": "failed", "statusDetails": {"message": "AssertionError: Expected <['butt_dayamayee@considine-heathcote.example', 'trivedi_parvati_iv@toy.test', 'kapoor_dr_rajiv@hoppe.test', 'johar_jagmeet@hahn.example', 'agarwal_ranjit@veum.test', 'marar_do_chandramohan@walsh-schumm.test', 'girja_khan@borer.test', 'vidya_jd_patil@will.test', 'balaaditya_gandhi@hills.example', 'naik_vishnu@toy.example']> to contain item <chandan_namboothiri@reichel.test>, but did not.", "trace": "def test_get_all_users():\n            response_data = users_v2.get_all_users()\n            assert (response_data.status_code == 200), f\"Status Code validation failed for {response_data.request.url}\"\n            response_text = response_data.json()\n>           assert_that(response_text).extracting(\"email\").is_not_empty().contains(\"chandan_namboothiri@reichel.test\")\nE           AssertionError: Expected <['butt_dayamayee@considine-heathcote.example', 'trivedi_parvati_iv@toy.test', 'kapoor_dr_rajiv@hoppe.test', 'johar_jagmeet@hahn.example', 'agarwal_ranjit@veum.test', 'marar_do_chandramohan@walsh-schumm.test', 'girja_khan@borer.test', 'vidya_jd_patil@will.test', 'balaaditya_gandhi@hills.example', 'naik_vishnu@toy.example']> to contain item <chandan_namboothiri@reichel.test>, but did not.\n\ntests/test_users_v2.py:18: AssertionError"}, "start": 1683640622597, "stop": 1683640622987, "uuid": "d882289e-04df-4ee9-af8b-63b554007c79", "historyId": "13c363c2ec3f977b0bffb19f28330198", "testCaseId": "13c363c2ec3f977b0bffb19f28330198", "fullName": "tests.test_users_v2#test_get_all_users", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_users_v2"}, {"name": "host", "value": "Mocha.local"}, {"name": "thread", "value": "78390-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_users_v2"}]}